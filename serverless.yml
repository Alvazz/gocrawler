service: comparison-shopping

frameworkVersion: '2'

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  profile: comparison_shopping
  iam:
    role:
      name: comparison-shopping-role
      path: /dev-service-role/lambda/

  environment:
    GO_CRAWLER_REDIS_ENDPOINT: comparison-shopping-cache.qlaosm.0001.use1.cache.amazonaws.com:6379
    GO_CRAWLER_REDIS_PORT: 6379

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

package:
  individually: true
  patterns:
    - '!./**'

functions:
  parser:
    handler: bin/parser
    description: Obtiene los productos almacenados en Redis y env√≠a sus comentarios a Comprehend
    timeout: 600 
    memorySize: 512
    vpc:
      securityGroupIds:
        - sg-04f3f3b446ccc4867
      subnetIds:
        - subnet-05c2681596ea123fb
    events:
      - schedule:
          rate: rate(3 minutes)
          enabled: false
    package:
      patterns:
        - './bin/parser'

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
